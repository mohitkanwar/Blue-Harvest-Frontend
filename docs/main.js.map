{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/accounts/account.create.body.ts","webpack:///./src/app/accounts/accounts-list/accounts-list.component.html","webpack:///./src/app/accounts/accounts-list/accounts-list.component.ts","webpack:///./src/app/accounts/accounts.module.ts","webpack:///./src/app/accounts/open-current-account/open-current-account.component.html","webpack:///./src/app/accounts/open-current-account/open-current-account.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customers/customers-list/customers-list.component.html","webpack:///./src/app/customers/customers-list/customers-list.component.ts","webpack:///./src/app/customers/customers.module.ts","webpack:///./src/app/customers/customers.service.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/environment-settings/environment-settings.component.html","webpack:///./src/app/dashboard/environment-settings/environment-settings.component.ts","webpack:///./src/app/dashboard/environment-settings/environment.service.ts","webpack:///./src/app/router/app-routing.module.ts","webpack:///./src/app/theme/footer-bar/footer-bar.component.html","webpack:///./src/app/theme/footer-bar/footer-bar.component.ts","webpack:///./src/app/theme/main-layout/main-layout.component.html","webpack:///./src/app/theme/main-layout/main-layout.component.ts","webpack:///./src/app/theme/notification/notification.component.ts","webpack:///./src/app/theme/notification/notification.service.ts","webpack:///./src/app/theme/theme.module.ts","webpack:///./src/app/theme/top-fixed-bar/top-fixed-bar.component.html","webpack:///./src/app/theme/top-fixed-bar/top-fixed-bar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class CreateAccountRequestBody{\r\n    customerId: number;\r\n    initialCredit: number;\r\n      \r\n}","<table mat-table\r\n       [dataSource]=\"accounts\" multiTemplateDataRows\r\n       class=\"mat-elevation-z8\">\r\n  <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay\">\r\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\r\n    <td mat-cell *matCellDef=\"let account\"> {{account[column]}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\r\n  <ng-container matColumnDef=\"expandedDetail\">\r\n    <td mat-cell *matCellDef=\"let account\" [attr.colspan]=\"columnsToDisplay.length\">\r\n      <div class=\"account-details\"\r\n           [@detailExpand]=\"account == expandedAccount ? 'expanded' : 'collapsed'\">\r\n        <table   class=\"mat-elevation-z10\">\r\n\r\n          <!--- Note that these columns can be defined in any order.\r\n                The actual rendered columns are set as a property on the row definition\" -->\r\n        \r\n          <!-- Position Column -->\r\n          <tr>\r\n            <th mat-header-cell > S.No. </th>\r\n            <th mat-header-cell > Transaction Id </th>\r\n            <th mat-header-cell > Amount </th>\r\n            <th mat-header-cell > Date </th>\r\n          </tr>\r\n          <tr *ngFor=\"let transaction of account.transactions;let i = index\">\r\n            <td mat-cell > {{i+1}} </td>\r\n            <td mat-cell > {{transaction.id}} </td>\r\n            <td mat-cell > {{transaction.amount}} </td>\r\n            <td mat-cell > {{transaction.createDate}} </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n  <tr mat-row *matRowDef=\"let account; columns: columnsToDisplay;\"\r\n      class=\"account-details-row\"\r\n      [class.account-details-expanded-row]=\"expandedAccount === account\"\r\n      (click)=\"toggleAccount(account)\">\r\n  </tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"account-detail-row\"></tr>\r\n</table>","import { Component, OnInit, Input } from '@angular/core';\r\nimport {animate, state, style, transition, trigger} from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-accounts-list',\r\n  templateUrl: './accounts-list.component.html',\r\n  styleUrls: ['./accounts-list.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\r\n      state('expanded', style({height: '*'})),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ])\r\n  ]\r\n})\r\nexport class AccountsListComponent implements OnInit {\r\n  @Input(\"accounts\") accounts:Account[];\r\n  columnsToDisplay: string[] = ['id','accountType','balance'];\r\n  expandedAccount:Account=null;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    console.log(this.accounts)\r\n  }\r\n\r\n\r\n  toggleAccount(account:Account){\r\n    if(this.expandedAccount==account){\r\n      this.expandedAccount = null;\r\n    }\r\n    else{\r\n      this.expandedAccount = account;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccountsListComponent } from './accounts-list/accounts-list.component';\r\nimport { MatTableModule, MatIconModule, MatInputModule, MatFormFieldModule, MatDialogModule, MatButtonModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ThemeModule } from '../theme/theme.module';\r\nimport { OpenCurrentAccountComponent } from './open-current-account/open-current-account.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatTableModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    ThemeModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatButtonModule\r\n  ],\r\n  declarations: [AccountsListComponent, OpenCurrentAccountComponent],\r\n  exports:[AccountsListComponent]\r\n})\r\nexport class AccountsModule { }\r\n","<div mat-dialog-content>\r\n  <p>Do you want a transaction to be initiated on the newly opened account?</p>\r\n  <mat-form-field>\r\n    <input matInput [(ngModel)]=\"data.initialAmount\" type=\"number\">\r\n  </mat-form-field>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-stroked-button (click)=\"onNoClick()\" class=\"cancelButton\">Cancel</button>\r\n  <button mat-button mat-stroked-button [mat-dialog-close]=\"data.initialAmount\" cdkFocusInitial (click)=\"onYesWithInitial()\">Open an account with initial amount </button>\r\n  <button mat-button mat-stroked-button [mat-dialog-close]=\"data.initialAmount\" (click)=\"onYesWithoutInitial()\">Open an account with 0 balance</button>\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { DialogData } from 'src/app/customers/customers-list/customers-list.component';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-open-current-account',\r\n  templateUrl: './open-current-account.component.html',\r\n  styleUrls: ['./open-current-account.component.css']\r\n})\r\nexport class OpenCurrentAccountComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<OpenCurrentAccountComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n  ngOnInit() {\r\n    this.data.isCanceled = true;\r\n  }\r\n  onNoClick(): void {\r\n    this.data.isCanceled = true;\r\n    this.dialogRef.close();\r\n\r\n  }\r\n  onYesWithoutInitial(){\r\n    this.data.isCanceled = false;\r\n    this.data.initialAmount = 0;\r\n    this.dialogRef.close(this.data);\r\n  }\r\n  onYesWithInitial(){\r\n    this.data.isCanceled = false;\r\n    if(this.data.initialAmount==undefined){\r\n      this.data.initialAmount = 0;\r\n    }\r\n    this.dialogRef.close(this.data);\r\n  }\r\n}\r\n","<app-main-layout></app-main-layout>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'blue-harvest';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ThemeModule } from './theme/theme.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutinngModule } from './router/app-routing.module';\r\nimport { DashboardModule } from './dashboard/dashboard.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatSnackBarModule } from '@angular/material';\r\nimport { NotificationService } from './theme/notification/notification.service';\r\nimport { CustomersModule } from './customers/customers.module';\r\nimport { CustomersService } from './customers/customers.service';\r\nimport { AccountsModule } from './accounts/accounts.module';\r\nimport { EnvironmentService } from './dashboard/environment-settings/environment.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ThemeModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutinngModule,\r\n    DashboardModule,\r\n    CustomersModule,\r\n    HttpClientModule,\r\n    MatSnackBarModule,\r\n    AccountsModule\r\n  ],\r\n  providers: [CustomersService,NotificationService,EnvironmentService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<button mat-icon-button >\r\n    <mat-icon>add</mat-icon>\r\n</button>\r\n<table mat-table\r\n       [dataSource]=\"customers\" multiTemplateDataRows\r\n       class=\"mat-elevation-z8\">\r\n  <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay\">\r\n    <th mat-header-cell *matHeaderCellDef> {{column}} </th>\r\n    <td mat-cell *matCellDef=\"let customer\"> {{customer[column]}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\r\n  <ng-container matColumnDef=\"expandedDetail\">\r\n    <td mat-cell *matCellDef=\"let customer\" [attr.colspan]=\"columnsToDisplay.length\">\r\n      <div class=\"customer-details\"\r\n           [@detailExpand]=\"customer == expandedCustomer ? 'expanded' : 'collapsed'\">\r\n        <div class=\"customer-details-box\">\r\n          <div class=\"customer-details-id\"> <img src=\"https://randomuser.me/api/portraits/lego/{{customer.customerId}}.jpg\" onerror=\"this.onerror=null;this.src='https://randomuser.me/api/portraits/lego/9.jpg';\" /> </div>\r\n        </div>\r\n        <table class=\"customer-details-table\">\r\n          <tr class=\"customer-details-row\"><th class=\"customer-details-header\"><b>Firstname</b></th><td class=\"customer-details-details\">{{customer.givenName}}</td></tr>\r\n          <tr class=\"customer-details-row\"><th class=\"customer-details-header\"><b>Lastname</b></th><td class=\"customer-details-details\">{{customer.surname}}</td></tr>\r\n          <tr class=\"customer-details-row\"><th class=\"customer-details-header\"><b>Number of Accounts</b></th><td class=\"customer-details-details\">{{customer.accounts.length}} <button mat-raised-button\t (click)=\"toggleAccountDetails()\" [color]=\"primary\" ngClass=\"showDetailsButton\" *ngIf=\"customer.accounts.length>0\">{{accountDetailsLinkText}}</button></td></tr>\r\n        </table>\r\n        <button mat-stroked-button\t\t (click)=\"confirmAddAccount()\" ngClass=\"addAccountButton\" >Add Account</button>\r\n\r\n      </div>\r\n      <div class=\"customer-details\"\r\n           [@detailExpand]=\"customer == expandedCustomer ? 'expanded' : 'collapsed'\">\r\n      <app-accounts-list [accounts]=\"customer.accounts\" style=\"width: 100%\" *ngIf=\"showAccountsList\"></app-accounts-list>\r\n      </div>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n  <tr mat-row *matRowDef=\"let customer; columns: columnsToDisplay;\"\r\n      class=\"customer-details-row\"\r\n      [class.customer-details-expanded-row]=\"expandedCustomer === customer\"\r\n      (click)=\"toggleCustomer(customer)\">\r\n  </tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"user-detail-row\"></tr>\r\n</table>\r\n<mat-paginator [length]=\"totalNumberOfCustomers\"\r\n              [pageSize]=\"pageSize\"\r\n              [pageIndex]=\"pageNumber\"\r\n              [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n              (page)=\"pageEvent =  getPaginatedCustomers($event)\">\r\n</mat-paginator>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { CustomersService } from '../customers.service';\r\nimport { Customer } from '../customers.model';\r\nimport {animate, state, style, transition, trigger} from '@angular/animations';\r\nimport { NotificationService } from 'src/app/theme/notification/notification.service';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA, PageEvent} from '@angular/material';\r\nimport { OpenCurrentAccountComponent } from 'src/app/accounts/open-current-account/open-current-account.component';\r\n\r\n\r\nexport interface DialogData {\r\n  initialAmount: number;\r\n  isCanceled:boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-customers-list',\r\n  templateUrl: './customers-list.component.html',\r\n  styleUrls: ['./customers-list.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\r\n      state('expanded', style({height: '*'})),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n  entryComponents:[]\r\n})\r\nexport class CustomersListComponent implements OnInit {\r\n  customers : Customer[];\r\n  columnsToDisplay: string[] = ['customerId','givenName','surname'];\r\n  private expandedCustomer: Customer;\r\n  private showAccountsList:boolean = false;\r\n  private accountDetailsLinkText:string = \"show details\";\r\n  private initialAmount:number;\r\n  totalNumberOfCustomers:number;\r\n  pageNumber:number;\r\n  pageSize:number;\r\n  pageEvent: PageEvent;\r\n  constructor(private customerService:CustomersService,private notificationService:NotificationService,public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.pageNumber = 0;\r\n    this.pageSize = 5;\r\n    let localPageEvent:PageEvent = new PageEvent();\r\n    localPageEvent.pageIndex=0;\r\n    localPageEvent.pageSize = 5;\r\n    this.getPaginatedCustomers(localPageEvent);\r\n  }\r\n   getPaginatedCustomers(pageEvent:PageEvent) :PageEvent{\r\n    this.customerService.getUsers(pageEvent.pageIndex, pageEvent.pageSize)\r\n      .subscribe(response => {\r\n        console.log(response);\r\n        if (response.status === \"SUCCESS\") {\r\n          this.customers = response.dataList;\r\n          this.totalNumberOfCustomers = response.totalCount;\r\n          this.pageNumber = response.pageNumber;\r\n          this.pageSize = response.pageSize;\r\n        }\r\n        else {\r\n          //Throw error that customers cannot be found\r\n          this.notificationService.sendNotification(\"Failure\");\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n        console.log(\"an error has  been caught\");\r\n        this.notificationService.sendNotification(\"An error has occurred during connecting the service!\");\r\n      });\r\n      return pageEvent;\r\n  }\r\n\r\n toggleCustomer(customer:Customer){\r\n   if(this.expandedCustomer==customer){\r\n     this.expandedCustomer = null;\r\n   }\r\n   else{\r\n     this.expandedCustomer = customer;\r\n   }\r\n }\r\n\r\n toggleAccountDetails(){\r\n   this.showAccountsList = !this.showAccountsList;\r\n   if(this.showAccountsList){\r\n    this.accountDetailsLinkText = \"hide details\";\r\n   }\r\n   else{\r\n    this.accountDetailsLinkText = \"show details\";\r\n   }\r\n }\r\n\r\n confirmAddAccount(){\r\n  const dialogRef = this.dialog.open(OpenCurrentAccountComponent, {\r\n    width: '500px',\r\n    data: { initialAmount: this.initialAmount}\r\n  });\r\n  dialogRef.afterClosed().subscribe(result => {\r\n    if(result!=undefined){\r\n      console.log('Open account for '+this.expandedCustomer.customerId +' With initial amount'+result.initialAmount);\r\n      console.log(result);\r\n      this.customerService.openAccount(this.expandedCustomer.customerId,result.initialAmount).subscribe(response => {\r\n        console.log(response);\r\n        if(response.status===\"SUCCESS\"){\r\n          this.notificationService.sendNotification(\"Account Created Successfully!\");\r\n          this.ngOnInit();\r\n        }\r\n        else{\r\n          //Throw error that customers cannot be found\r\n            this.notificationService.sendNotification(\"An Error Occurred during account opening!\");\r\n          \r\n        }\r\n    },\r\n    error =>{\r\n      console.log(error);\r\n      console.log(\"an error has  been caught\")\r\n      this.notificationService.sendNotification(\"An error has occurred!\");\r\n    })\r\n    }\r\n  });\r\n }\r\n} \r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CustomersListComponent } from './customers-list/customers-list.component';\r\nimport { MatTableModule, MatSnackBarModule, MatIconModule, MatButtonModule, MatDialogModule, MatFormFieldModule, MatInputModule, MatPaginatorModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ThemeModule } from '../theme/theme.module';\r\nimport { AccountsModule } from '../accounts/accounts.module';\r\nimport { OpenCurrentAccountComponent } from '../accounts/open-current-account/open-current-account.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatTableModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    ThemeModule,\r\n    AccountsModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatPaginatorModule\r\n  ],\r\n  declarations: [CustomersListComponent],\r\n  exports:[\r\n    CustomersListComponent\r\n  ],\r\n  entryComponents:[OpenCurrentAccountComponent]\r\n})\r\nexport class CustomersModule { }\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport * as core from \"@angular/core\";\r\nimport { ListResponse } from \"../responseTypes/list-response.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { CreateAccountRequestBody } from \"../accounts/account.create.body\";\r\nimport { EnvironmentService } from \"../dashboard/environment-settings/environment.service\";\r\n@core.Injectable()\r\nexport class CustomersService {\r\n    constructor(private http: HttpClient,private environmentService:EnvironmentService) {}\r\n\r\n    getUsers(pageNumber,pageSize) :Observable<ListResponse>{\r\n       return this.http.get<ListResponse>(this.environmentService.getCustomersListAPI(pageNumber,pageSize));\r\n    }  \r\n    \r\n    openAccount(custID,initialAmount) :Observable<ListResponse>{\r\n        let body:CreateAccountRequestBody = new CreateAccountRequestBody();\r\n        body.customerId=custID;\r\n        body.initialCredit = initialAmount;\r\n        return this.http.post<ListResponse>(this.environmentService.getOpenAccountAPI(),body);\r\n     }  \r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { EnvironmentSettingsComponent } from './environment-settings/environment-settings.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule, MatInputModule, MatButtonModule, MatExpansionModule, MatTableModule, MatStepperModule, MatIconModule } from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    MatTableModule,\r\n    MatStepperModule,\r\n    MatIconModule\r\n    \r\n  ],\r\n  declarations: [DashboardComponent,EnvironmentSettingsComponent],\r\n  exports:[\r\n    DashboardComponent,EnvironmentSettingsComponent\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","\r\n\r\n\r\n\r\n  <p>Hi Admin</p>\r\n  <h3> Welcome to Blue Harvest Bank's Administrative Portal</h3>\r\n\r\n  <h3>Introduction to Code Base</h3>\r\n  <p>\r\n      This application consists of two code bases, Back-End and Front-End Applications. Also, few settings are required to integrate both of them.\r\n  \r\n    </p>\r\n  <mat-accordion class=\"mainAccordian\">\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <h4 class=\"panelHeading\"> Back-End Application</h4>\r\n        </mat-panel-title>\r\n        <mat-panel-description class=\"panelDescription\">\r\n          Written using Java, Spring-Boot, Maven and other niche technologies\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <p>\r\n        Backend application has been developed using <b>Spring-Boot Framework (2.0.6.RELEASE)</b>. The minimum Java\r\n        version required is<strong> 1.9 </strong>.\r\n        It has been tested on Windows 10.\r\n\r\n        The application is build using Maven configuration, and hence all build related information can be found in\r\n        pom.xml\r\n      </p>\r\n      <table class=\"table\">\r\n        <tr>\r\n          <th class=\"th\">Code Location</th>\r\n          <td>The code is checked in to Github and can be downloaded from <a href=\"https://github.com/mohitkanwar/Blue-Harvest-Backend\">this\r\n              link</a></td>\r\n        </tr>\r\n        <tr>\r\n          <th class=\"th\">Minimum Requirements to run</th>\r\n          <td> Java 1.9<br /> Maven 3.5.4</td>\r\n        </tr>\r\n        <tr>\r\n          <th class=\"th\">Test Environments</th>\r\n          <td> Maven 3.5.4<br />\r\n            Java version: 10.0.2, vendor: Oracle Corporation, <br />\r\n            Default locale: en_IN, platform encoding: Cp1252 <br />\r\n            OS name: \"windows 10\", version: \"10.0\", arch: \"amd64\", family: \"windows\"</td>\r\n        </tr>\r\n      </table>\r\n\r\n\r\n\r\n      <h5>\r\n        Deployment Instructions\r\n      </h5>\r\n      <mat-accordion>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              Option 1\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Build it on your own\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n\r\n\r\n          <mat-horizontal-stepper [linear]=\"false\" #stepper>\r\n            <mat-step>\r\n              <ng-template matStepLabel>Get the Code</ng-template>\r\n              clone the project using following command<br />\r\n              <span class=\"terminalCode\"><code>git clone https://github.com/mohitkanwar/Blue-Harvest-Backend</code></span>\r\n            </mat-step>\r\n            <mat-step>\r\n              <ng-template matStepLabel>Build It</ng-template>\r\n              Build the project using maven and the following command:\r\n              <span class=\"terminalCode\"><code>mvn clean install</code></span>\r\n            </mat-step>\r\n            <mat-step>\r\n              <ng-template matStepLabel>Run it</ng-template>\r\n              Run the generated jar (as in Step 2 of Option 2), or use Spring-Boot to run the application\r\n              <span class=\"terminalCode\"><code>mvn spring-boot:run</code></span>\r\n            </mat-step>\r\n          </mat-horizontal-stepper>\r\n        </mat-expansion-panel>\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              Option 2\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n              Get the readymade version\r\n            </mat-panel-description>\r\n          </mat-expansion-panel-header>\r\n\r\n\r\n          <mat-horizontal-stepper [linear]=\"false\" #stepper>\r\n            <mat-step>\r\n              <ng-template matStepLabel>Get the Code</ng-template>\r\n              Download the jar directly from <a href=\"https://github.com/mohitkanwar/Blue-Harvest-Backend/blob/master/target/backend-assignment-1.0-RELEASE.jar\">this\r\n                link</a>\r\n            </mat-step>\r\n\r\n            <mat-step>\r\n              <ng-template matStepLabel>Run it</ng-template>\r\n              Run the jar using following command\r\n              <span class=\"terminalCode\"><code>java -jar backend-assignment-1.0-RELEASE.jar</code></span>\r\n            </mat-step>\r\n          </mat-horizontal-stepper>\r\n        </mat-expansion-panel>\r\n      </mat-accordion>\r\n      <h5>Usage Instructions</h5>\r\n      <p>\r\n          By default the application runs on <a href=\"http://localhost:8080/\">http://localhost:8080/</a> . To change port number, add following code to application.properties\r\n          <span class=\"terminalCode\"><code>server.port=[your preferred port]</code></span>\r\n\r\n          Important APIs exposed by Backend Application :\r\n          \r\n      </p>\r\n      <ol>\r\n          <li> <a href=\"http://localhost:8080/swagger-ui.html\">Swagger UI</a></li>\r\n          <li> Get Customer List </li>\r\n          <li> Open Current Account</li>\r\n        </ol>\r\n      \r\n\r\n    </mat-expansion-panel>\r\n    <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <h4 class=\"panelHeading\">Front-End Application</h4>\r\n        </mat-panel-title>\r\n        <mat-panel-description class=\"panelDescription\">\r\n          Written using Angular 6, Material, Typescript and other niche technologies\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <p>Front-End application has been developed using Angular 6, utilizing the power of angular-cli. The components are created in typescript. \r\n        Angular Material is used to take advantage of some already build components. The styling is done in CSS.\r\n      </p>\r\n\r\n      <table class=\"table\">\r\n          <tr>\r\n            <th class=\"th\">Code Location</th>\r\n            <td>The code is checked in to Github and can be downloaded from <a href=\"https://github.com/mohitkanwar/Blue-Harvest-Frontend\">this\r\n                link</a></td>\r\n          </tr>\r\n          <tr>\r\n            <th class=\"th\">Minimum Requirements to run</th>\r\n            <td> Chrome 69</td>\r\n          </tr>\r\n          <tr>\r\n            <th class=\"th\">Test Environments</th>\r\n            <td>\r\n              Angular CLI: 6.2.4<br/>\r\n                Node: 8.11.3<br/>\r\n                OS: win32 x64<br/>\r\n                </td>\r\n          </tr>\r\n        </table>\r\n\r\n        <h5>\r\n            Deployment Instructions\r\n          </h5>\r\n          <mat-accordion>\r\n            <mat-expansion-panel>\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                  Option 1\r\n                </mat-panel-title>\r\n                <mat-panel-description>\r\n                  Build it on your own\r\n                </mat-panel-description>\r\n              </mat-expansion-panel-header>\r\n    \r\n    \r\n              <mat-horizontal-stepper [linear]=\"false\" #stepper>\r\n                <mat-step>\r\n                  <ng-template matStepLabel>Get the Code</ng-template>\r\n                  clone the project using following command<br />\r\n                  <span class=\"terminalCode\"><code>git clone https://github.com/mohitkanwar/Blue-Harvest-Frontend</code></span>\r\n                </mat-step>\r\n                <mat-step>\r\n                  <ng-template matStepLabel>Build It</ng-template>\r\n                  Build the project using ng cli and the following command:\r\n                  <span class=\"terminalCode\"><code>ng build</code></span>\r\n                </mat-step>\r\n                <mat-step>\r\n                  <ng-template matStepLabel>Run it</ng-template>\r\n                  Run the generated angular application\r\n                  <span class=\"terminalCode\"><code>ng serve</code></span>\r\n                </mat-step>\r\n              </mat-horizontal-stepper>\r\n            </mat-expansion-panel>\r\n            <mat-expansion-panel>\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                  Option 2\r\n                </mat-panel-title>\r\n                <mat-panel-description>\r\n                  Get the readymade version\r\n                </mat-panel-description>\r\n              </mat-expansion-panel-header>\r\n    \r\n    \r\n              <mat-horizontal-stepper [linear]=\"false\" #stepper>\r\n                <mat-step>\r\n                  <ng-template matStepLabel>Use the deployed application</ng-template>\r\n                  Use the application deployed on github pages at  <a href=\"https://mohitkanwar.github.io/Blue-Harvest-Frontend/index\">this\r\n                    link</a>\r\n                  </mat-step>\r\n              </mat-horizontal-stepper>\r\n            </mat-expansion-panel>\r\n          </mat-accordion>\r\n    </mat-expansion-panel>\r\n    <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            <h4 class=\"panelHeading\">Integration</h4>\r\n          </mat-panel-title>\r\n          <mat-panel-description class=\"panelDescription\">\r\n            Communication between Front-End and Back-End Applications\r\n          </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n        <p>\r\n          The communication between Front-End and Back-End applications happen over REST APIs. At present all the apis are JSON based.\r\n        </p>\r\n        <h5>Configuring Front-End to consume Backend APIs</h5>\r\n        <p>To configure backend path in front-end application, a component has been created (to ease out testing, not recommended for production). <br/>\r\n        For production, the application should use environments file provided by Angular. </p>\r\n        <ol>\r\n          <li>Go to     <a routerLink=\"/settings\" routerLinkActive=\"active\" class=\"menuItem\"><button   mat-button mat-flat-button><mat-icon>settings</mat-icon><span>Settings</span></button></a>\r\n         in top bar. </li>\r\n          <li>Add the server path in the input</li>\r\n          <li>Click on update</li>\r\n          <li>A notification on top right corner, confirms the update</li>\r\n        </ol>\r\n        <img src=\"/assets/images/front-end/settings.png\" alt=\"example diagram\" />\r\n\r\n        <h5>Configuring Back-End to consume requests from Front-End</h5>\r\n        <p>Due to CORS security implementation by all modern browsers, backend application must explicitely allow the origins of requests. <br/>\r\n        This configuration is done in a java class <i>com.mk.blueharvest.backendassignment.<b>SimpleCORSFilter</b></i>\r\n        At present following origins are allowed\r\n        </p>\r\n        <ul>\r\n          <li>https://mohitkanwar.github.io</li>\r\n          <li>http://localhost:4200</li>\r\n        </ul>\r\n        <p>\r\n          Which means if your Front-End application is running on some other origin, the Back-End application must be made aware of it by re-building the application.\r\n          This can also be made configurable if required, by persisting this information in a DB.\r\n        </p>\r\n      </mat-expansion-panel>\r\n  </mat-accordion>\r\n\r\n\r\n\r\n\r\n<h3>Architecture</h3>\r\n<h4>Back-End Application - APIs</h4>\r\n<p>\r\n  The application has Two entry points exposed as of now :-\r\n</p>\r\n<ul>\r\n  <li>GET  /customer/list</li>\r\n  <li>POST /customer/account/current</li>\r\n</ul>\r\n<h5>GET /customer/list</h5>\r\n<p>\r\n  This API is exposed in <i>com.mk.blueharvest.backendassignment.customers.controllers.<b>CustomerController</b></i>. \r\n  It returns a paginated list of all the customers in the system. It also eagerly loads any accounts linked to them and the transactions on those accounts.\r\n  To achieve pagination, two optional parameters are provided <i>pagenumber</i> and <i>pagesize</i>.\r\n</p>\r\n<h5>POST /customer/account/current</h5>\r\n<p>\r\n  This API is exposed in <i>com.mk.blueharvest.backendassignment.customers.controllers.<b>CustomerAccountsController</b></i>. \r\n  The request body needs to be a json accepting <i>customerId</i> of the customer for whom a current account needs to be opened.\r\n  It also needs <i>initialCredit</i>. If initialCredit is not 0, a transaction with the given amount is created and added to the account.\r\n</p>\r\n\r\n<h4>Business Models</h4>\r\n<p>\r\n  The application has three main business models.\r\n</p>\r\n<ul>\r\n  <li>Customer</li>\r\n  <li>Account</li>\r\n  <li>Transaction</li>\r\n</ul>\r\n<p></p>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  panelOpenState = false;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","Please provide the backend Server Base Location\r\n<mat-form-field>\r\n  <input matInput [(ngModel)]=\"baseUrl\" >\r\n</mat-form-field>\r\n\r\n<button mat-button mat-stroked-button (click)=\"ngOnSave()\" >Update</button>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { EnvironmentService } from './environment.service';\r\nimport { NotificationService } from 'src/app/theme/notification/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-environment-settings',\r\n  templateUrl: './environment-settings.component.html',\r\n  styleUrls: ['./environment-settings.component.css']\r\n})\r\nexport class EnvironmentSettingsComponent implements OnInit {\r\n\r\n  constructor(private environmentService:EnvironmentService, private notification:NotificationService) { }\r\n  @Input() baseUrl:string;\r\n  ngOnInit() {\r\n    this.baseUrl = this.environmentService.backendUrl;\r\n  }\r\n  ngOnSave(){\r\n    console.log(this.baseUrl);\r\n    this.environmentService.backendUrl=this.baseUrl;\r\n    this.notification.sendNotification(\"Environment Updated!\");\r\n  }\r\n}\r\n","\r\n\r\nexport class EnvironmentService {\r\n    backendUrl='http://localhost:8080';\r\n     \r\n      getCustomersListAPI(pagenumber,pagesize){\r\n          return this.backendUrl+'/customer/list?pagenumber='+pagenumber+'&pagesize='+pagesize;\r\n      }\r\n      getOpenAccountAPI(){\r\n        return this.backendUrl+'/customer/account/current';\r\n    }\r\n      \r\n}\r\n\r\n\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { DashboardComponent } from \"../dashboard/dashboard/dashboard.component\";\r\nimport { CustomersListComponent } from \"../customers/customers-list/customers-list.component\";\r\nimport { EnvironmentSettingsComponent } from \"../dashboard/environment-settings/environment-settings.component\";\r\n\r\nconst appRoutes:Routes=[\r\n{path : '', redirectTo : '/index' , pathMatch:'full'},\r\n{path : 'index', component:DashboardComponent},\r\n{path : 'customers', component:CustomersListComponent},\r\n{path : 'settings', component:EnvironmentSettingsComponent},\r\n];\r\n@NgModule({\r\nimports:[RouterModule.forRoot(appRoutes)],\r\nexports:[RouterModule]\r\n})\r\nexport class AppRoutinngModule{\r\n\r\n}","<footer>\r\n  <mat-toolbar>  \r\n    <mat-toolbar-row>\r\n      <mat-icon>copyright</mat-icon> Mohit Kanwar\r\n    </mat-toolbar-row>\r\n  </mat-toolbar>\r\n</footer>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer-bar',\r\n  templateUrl: './footer-bar.component.html',\r\n  styleUrls: ['./footer-bar.component.css']\r\n})\r\nexport class FooterBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<app-top-fixed-bar></app-top-fixed-bar>\r\n<app-notification></app-notification>\r\n<div class=\"body\">\r\n        <router-outlet></router-outlet>\r\n</div>\r\n<div class=\"footerBuffor\"></div>\r\n<app-footer-bar></app-footer-bar>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main-layout',\r\n  templateUrl: './main-layout.component.html',\r\n  styleUrls: ['./main-layout.component.css']\r\n})\r\nexport class MainLayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NotificationService } from './notification.service';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.css']\r\n})\r\nexport class NotificationComponent implements OnInit {\r\n  private showNotification:boolean;\r\n  private message:string;\r\n  constructor(private notificationService:NotificationService, private snackbar:MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.showNotification = false;\r\n    this.notificationService.notificationEvent.subscribe(message=>{\r\n      console.log(message);\r\n      this.showNotification=true;\r\n      this.message=message.message;\r\n      let config = new MatSnackBarConfig();\r\n      config.verticalPosition= 'top';\r\n      config.duration = 8000;\r\n      config.horizontalPosition='end';\r\n      config.panelClass='notificationPanel';\r\n      this.snackbar.open(this.message,'Close', config)\r\n      setTimeout(()=>{    //<<<---    using ()=> syntax\r\n        this.showNotification = false;\r\n        this.message='';\r\n   }, 5000);\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","import { Output, EventEmitter } from \"@angular/core\";\r\n\r\nexport class NotificationService{\r\n    @Output() notificationEvent:EventEmitter<{\"message\":string}> = new EventEmitter();\r\n\r\n    public sendNotification(message:string){\r\n        this.notificationEvent.emit({\"message\":message});\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { TopFixedBarComponent } from './top-fixed-bar/top-fixed-bar.component';\r\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {MatToolbarModule, MatMenu, MatMenuModule, MatIconModule, MatSnackBarModule, MatRippleModule, MatButtonModule} from '@angular/material';\r\nimport { FooterBarComponent } from './footer-bar/footer-bar.component';\r\nimport { AppRoutinngModule } from \"../router/app-routing.module\";\r\nimport { NotificationComponent } from './notification/notification.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n    TopFixedBarComponent,\r\n    MainLayoutComponent,\r\n    FooterBarComponent,\r\n    NotificationComponent\r\n    ],\r\n    imports: [\r\n      CommonModule,\r\n      BrowserAnimationsModule,\r\n      MatToolbarModule,\r\n      MatMenuModule,\r\n      MatIconModule,\r\n      AppRoutinngModule,\r\n      MatSnackBarModule,\r\n      MatRippleModule,\r\n      MatButtonModule\r\n\r\n    ],\r\n    providers: [],\r\n    bootstrap: [MainLayoutComponent],\r\n    exports: [MainLayoutComponent,NotificationComponent] \r\n  })\r\nexport class ThemeModule {\r\n\r\n}","<mat-toolbar>  \r\n  <mat-toolbar-row>\r\n      \r\n    <span class=\"menuItem\">BH!</span>\r\n    <span class=\"menuItem\"></span>\r\n    <a routerLink=\"/index\" routerLinkActive=\"active\" class=\"menuItem\"><button   mat-button mat-flat-button><mat-icon>home</mat-icon><span>Home</span></button></a>\r\n    <a routerLink=\"/customers\" routerLinkActive=\"active\" class=\"menuItem\"><button   mat-button mat-flat-button><mat-icon>face</mat-icon><span>Customers</span></button></a>\r\n    <a routerLink=\"/settings\" routerLinkActive=\"active\" class=\"menuItem\"><button   mat-button mat-flat-button><mat-icon>settings</mat-icon><span>Settings</span></button></a>\r\n\r\n\r\n    \r\n  </mat-toolbar-row>\r\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-top-fixed-bar',\r\n  templateUrl: './top-fixed-bar.component.html',\r\n  styleUrls: ['./top-fixed-bar.component.css']\r\n})\r\nexport class TopFixedBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export const environment = {\r\n  production: true,\r\n  backendUrl:'http://localhost:8080',\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}